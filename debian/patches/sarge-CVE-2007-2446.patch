diff -ur samba-3.0.14a.unch/source/rpc_parse/parse_lsa.c samba-3.0.14a/source/rpc_parse/parse_lsa.c
--- samba-3.0.14a.unch/source/rpc_parse/parse_lsa.c	2007-05-11 10:29:20.000000000 -0400
+++ samba-3.0.14a/source/rpc_parse/parse_lsa.c	2007-05-11 12:15:38.000000000 -0400
@@ -962,12 +962,17 @@
 			       &trn->num_entries2))
 			return False;
 
+		if (trn->num_entries2 != trn->num_entries) {
+		    /* RPC fault */
+		    return False;
+		}
+
 		if (UNMARSHALLING(ps)) {
-			if ((trn->name = PRS_ALLOC_MEM(ps, LSA_TRANS_NAME, trn->num_entries)) == NULL) {
+			if ((trn->name = PRS_ALLOC_MEM(ps, LSA_TRANS_NAME, trn->num_entries2)) == NULL) {
 				return False;
 			}
 
-			if ((trn->uni_name = PRS_ALLOC_MEM(ps, UNISTR2, trn->num_entries)) == NULL) {
+			if ((trn->uni_name = PRS_ALLOC_MEM(ps, UNISTR2, trn->num_entries2)) == NULL) {
 				return False;
 			}
 		}
@@ -1818,7 +1823,7 @@
 
 static BOOL lsa_io_privilege_set(const char *desc, PRIVILEGE_SET *r_c, prs_struct *ps, int depth)
 {
-	uint32 i;
+	uint32 i, dummy;
 
 	prs_debug(ps, depth, desc, "lsa_io_privilege_set");
 	depth++;
@@ -1826,7 +1831,7 @@
 	if(!prs_align(ps))
 		return False;
  
-	if(!prs_uint32("count", ps, depth, &r_c->count))
+	if(!prs_uint32("count", ps, depth, &dummy))
 		return False;
 	if(!prs_uint32("control", ps, depth, &r_c->control))
 		return False;
diff -ur samba-3.0.14a.unch/source/rpc_parse/parse_prs.c samba-3.0.14a/source/rpc_parse/parse_prs.c
--- samba-3.0.14a.unch/source/rpc_parse/parse_prs.c	2007-05-11 10:29:20.000000000 -0400
+++ samba-3.0.14a/source/rpc_parse/parse_prs.c	2007-05-11 12:15:38.000000000 -0400
@@ -151,7 +151,7 @@
 {
 	char *ret = NULL;
 
-	if (size) {
+	if (size && count) {
 		/* We can't call the type-safe version here. */
 #if defined(PARANOID_MALLOC_CHECKER)
 		ret = talloc_zero_array_(ps->mem_ctx, size, count);
diff -ur samba-3.0.14a.unch/source/rpc_parse/parse_sec.c samba-3.0.14a/source/rpc_parse/parse_sec.c
--- samba-3.0.14a.unch/source/rpc_parse/parse_sec.c	2007-05-11 10:29:20.000000000 -0400
+++ samba-3.0.14a/source/rpc_parse/parse_sec.c	2007-05-11 12:16:29.000000000 -0400
@@ -122,7 +122,7 @@
  for you as it reads them.
 ********************************************************************/
 
-BOOL sec_io_acl(const char *desc, SEC_ACL **ppsa, prs_struct *ps, int depth)
+static BOOL sec_io_acl(const char *desc, SEC_ACL **ppsa, prs_struct *ps, int depth)
 {
 	unsigned int i;
 	uint32 old_offset;
@@ -165,13 +165,11 @@
 		return False;
 
 	if (UNMARSHALLING(ps)) {
-		/*
-		 * Even if the num_aces is zero, allocate memory as there's a difference
-		 * between a non-present DACL (allow all access) and a DACL with no ACE's
-		 * (allow no access).
-		 */
-		if((psa->ace = PRS_ALLOC_MEM(ps, SEC_ACE, psa->num_aces+1)) == NULL)
-			return False;
+	    if (psa->num_aces) {
+		if((psa->ace = 
+		    PRS_ALLOC_MEM(ps, SEC_ACE, psa->num_aces)) == NULL)
+		    return False;
+	    }
 	}
 
 	for (i = 0; i < psa->num_aces; i++) {
diff -ur samba-3.0.14a.unch/source/rpc_parse/parse_spoolss.c samba-3.0.14a/source/rpc_parse/parse_spoolss.c
--- samba-3.0.14a.unch/source/rpc_parse/parse_spoolss.c	2007-05-11 10:29:20.000000000 -0400
+++ samba-3.0.14a/source/rpc_parse/parse_spoolss.c	2007-05-11 12:15:38.000000000 -0400
@@ -245,6 +245,9 @@
 	
 	if (type->count2 != type->count)
 		DEBUG(4,("What a mess, count was %x now is %x !\n", type->count, type->count2));
+	if (type->count2 > MAX_NOTIFY_TYPE_FOR_NOW) {
+	    return False;
+	}
 
 	/* parse the option type data */
 	for(i=0;i<type->count2;i++)
