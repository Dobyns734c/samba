diff --git a/debian/rules b/debian/rules
index 432e7e0..24ef87e 100755
--- a/debian/rules
+++ b/debian/rules
@@ -60,7 +60,7 @@ conf_args = \
 		--disable-rpath \
 		--disable-rpath-install \
 		--bundled-libraries=NONE,pytevent,iniparser \
-		--builtin-libraries=replace,ccan \
+		--builtin-libraries=replace \
 		--minimum-library-version="$(shell ./debian/autodeps.py --minimum-library-version)"
 
 %:
diff --git a/debian/samba-dev.install b/debian/samba-dev.install
index c5cc798..261fc17 100644
--- a/debian/samba-dev.install
+++ b/debian/samba-dev.install
@@ -1,3 +1,30 @@
+usr/include/samba-4.0/ccan/tally/tally.h
+usr/include/samba-4.0/ccan/cast/cast.h
+usr/include/samba-4.0/ccan/tcon/tcon.h
+usr/include/samba-4.0/ccan/htable/htable.h
+usr/include/samba-4.0/ccan/htable/htable_type.h
+usr/include/samba-4.0/ccan/hash/hash.h
+usr/include/samba-4.0/ccan/array_size/array_size.h
+usr/include/samba-4.0/ccan/typesafe_cb/typesafe_cb.h
+usr/include/samba-4.0/ccan/str/str.h
+usr/include/samba-4.0/ccan/str/str_debug.h
+usr/include/samba-4.0/ccan/list/list.h
+usr/include/samba-4.0/ccan/build_assert/build_assert.h
+usr/include/samba-4.0/ccan/asearch/asearch.h
+usr/include/samba-4.0/ccan/likely/likely.h
+usr/include/samba-4.0/ccan/failtest/failtest_override.h
+usr/include/samba-4.0/ccan/failtest/failtest.h
+usr/include/samba-4.0/ccan/failtest/failtest_proto.h
+usr/include/samba-4.0/ccan/failtest/failtest_undo.h
+usr/include/samba-4.0/ccan/read_write_all/read_write_all.h
+usr/include/samba-4.0/ccan/tlist/tlist.h
+usr/include/samba-4.0/ccan/ilog/ilog.h
+usr/include/samba-4.0/ccan/endian/endian.h
+usr/include/samba-4.0/ccan/time/time.h
+usr/include/samba-4.0/ccan/check_type/check_type.h
+usr/include/samba-4.0/ccan/compiler/compiler.h
+usr/include/samba-4.0/ccan/err/err.h
+usr/include/samba-4.0/ccan/container_of/container_of.h
 usr/include/samba-4.0/charset.h
 usr/include/samba-4.0/core/doserr.h
 usr/include/samba-4.0/core/error.h
@@ -137,6 +164,7 @@ usr/lib/*/libsmbconf.so
 usr/lib/*/libsmbldap.so
 usr/lib/*/libtevent-util.so
 usr/lib/*/libtorture.so
+usr/lib/*/pkgconfig/ccan.pc
 usr/lib/*/pkgconfig/dcerpc.pc
 usr/lib/*/pkgconfig/dcerpc_atsvc.pc
 usr/lib/*/pkgconfig/dcerpc_samr.pc
diff --git a/debian/samba-libs.install b/debian/samba-libs.install
index 9550e4d..ba8a4e9 100644
--- a/debian/samba-libs.install
+++ b/debian/samba-libs.install
@@ -1,3 +1,4 @@
+usr/lib/*/libccan.so*
 usr/lib/*/libdcerpc-atsvc.so.*
 usr/lib/*/libdcerpc-binding.so.*
 usr/lib/*/libdcerpc-samr.so.*
diff --git a/lib/ccan/ccan.pc.in b/lib/ccan/ccan.pc.in
new file mode 100644
index 0000000..3a24a15
--- /dev/null
+++ b/lib/ccan/ccan.pc.in
@@ -0,0 +1,9 @@
+prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: ccan
+Description: 
+Version: @PACKAGE_VERSION@
+Libs: -L${libdir} -lccan
+Cflags: -I${includedir} 
diff --git a/lib/ccan/wscript b/lib/ccan/wscript
index 59b8205..fd83d9f 100644
--- a/lib/ccan/wscript
+++ b/lib/ccan/wscript
@@ -1,6 +1,8 @@
 #!/usr/bin/env python
 
-import Logs, sys, Options
+import Logs, sys, Options, os
+
+VERSION = "0.1"
 
 def configure(conf):
     conf.DEFINE('HAVE_CCAN', 1)
@@ -148,6 +150,8 @@ def ccan_module(bld, name, deps=''):
 def build(bld):
     bld.env.CCAN_MODS = ""
 
+    bld.env.public_headers_skip.append('config.h')
+
     # These have actual C files.
     ccan_module(bld, 'hash', 'ccan-build_assert')
     ccan_module(bld, 'ilog', 'ccan-compiler');
@@ -167,23 +171,36 @@ def build(bld):
     ccan_module(bld, 'typesafe_cb')
     ccan_module(bld, 'err', 'ccan-compiler')
 
-    # Failtest pulls in a lot of stuff, and it's only for unit tests.
-    if bld.env.DEVELOPER_MODE:
-        ccan_module(bld, 'container_of', 'ccan-check_type')
-        ccan_module(bld, 'htable', 'ccan-compiler')
-        ccan_module(bld, 'list', 'ccan-container_of')
-        ccan_module(bld, 'time')
-        ccan_module(bld, 'tcon')
-        ccan_module(bld, 'tlist', 'ccan-list ccan-tcon')
-        ccan_module(bld, 'failtest',
-                    '''
-                    ccan-err ccan-hash ccan-htable ccan-list
-                    ccan-read_write_all ccan-str ccan-time execinfo
-                    ''')
+    ccan_module(bld, 'container_of', 'ccan-check_type')
+    ccan_module(bld, 'htable', 'ccan-compiler')
+    ccan_module(bld, 'list', 'ccan-container_of')
+    ccan_module(bld, 'time')
+    ccan_module(bld, 'tcon')
+    ccan_module(bld, 'tlist', 'ccan-list ccan-tcon')
+    ccan_module(bld, 'failtest',
+                '''
+                ccan-err ccan-hash ccan-htable ccan-list
+                ccan-read_write_all ccan-str ccan-time execinfo
+                ''')
+
+    modules_enabled = [mod.split('-')[1] for mod in bld.env.CCAN_MODS.split(' ') if mod]
+    header_path = [('%s*' % header, 'ccan/%s' % header) for header in modules_enabled]
+    public_headers = [header for header in bld.path.ant_glob('**/*.h').split(' ')
+                      if '/test/' not in header and header.split('/')[0] in modules_enabled]
+
+    for (_, subdir) in header_path:
+        header_dir = os.path.join(bld.srcnode.abspath(), bld.env.build_public_headers, subdir)
+        try:
+            os.makedirs(header_dir)
+        except OSError:
+            pass
 
     # This is the complete CCAN collection as one group.
     bld.SAMBA_LIBRARY('ccan',
                       source='',
                       deps=bld.env.CCAN_MODS,
-                      private_library=True,
+                      pc_files='ccan.pc',
+                      public_headers=' '.join(public_headers),
+                      header_path=header_path,
+                      vnum=VERSION,
                       grouping_library=True)
