.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "RPCCLIENT" 1 "" "" ""
&#8962;SH "NAME"
rpcclient - tool for executing client side MS-RPC functions
&#8962;SH "SYNOPSIS"
&#8962;HP 1
rpcclient [-A&#9600;authfile] [-c&#9600;<command&#9600;string>] [-d&#9600;debuglevel] [-h] [-l&#9600;logdir] [-N] [-s&#9600;<smb&#9600;config&#9600;file>] [-U&#9600;username[%password]] [-W&#9600;workgroup] [-N] [-I&#9600;destinationIP] {server}
&#8962;SH "DESCRIPTION"
&#8962;PP
This tool is part of the
&#9619;fBsamba&#9619;fR(7)
suite.
&#8962;PP
rpcclient
is a utility initially developed to test MS-RPC functionality in Samba itself. It has undergone several stages of development and stability. Many system administrators have now written scripts around it to manage Windows NT clients from their UNIX workstation.
&#8962;SH "OPTIONS"
&#8962;PP
server
&#8962;RS 4
NetBIOS name of Server to which to connect. The server can be any SMB/CIFS server. The name is resolved using the
name resolve order line from
&#9619;fBsmb.conf&#9619;fR(5).
&#8962;RE
&#8962;PP
-c|--command='command string'
&#8962;RS 4
execute semicolon separated commands (listed below))
&#8962;RE
&#8962;PP
-I IP-address
&#8962;RS 4
&#9619;fIIP address&#9619;fR
is the address of the server to connect to. It should be specified in standard "a.b.c.d" notation.
&#8962;sp
Normally the client would attempt to locate a named SMB/CIFS server by looking it up via the NetBIOS name resolution mechanism described above in the
&#9619;fIname resolve order&#9619;fR
parameter above. Using this parameter will force the client to assume that the server is on the machine with the specified IP address and the NetBIOS name component of the resource being connected to will be ignored.
&#8962;sp
There is no default for this parameter. If not supplied, it will be determined automatically by the client as described above.
&#8962;RE
&#8962;PP
-d|--debuglevel=level
&#8962;RS 4
&#9619;fIlevel&#9619;fR
is an integer from 0 to 10. The default value if this parameter is not specified is 0.
&#8962;sp
The higher this value, the more detail will be logged to the log files about the activities of the server. At level 0, only critical errors and serious warnings will be logged. Level 1 is a reasonable level for day-to-day running - it generates a small amount of information about operations carried out.
&#8962;sp
Levels above 1 will generate considerable amounts of log data, and should only be used when investigating a problem. Levels above 3 are designed for use only by developers and generate HUGE amounts of log data, most of which is extremely cryptic.
&#8962;sp
Note that specifying this parameter here will override the

parameter in the
&#9619;fIsmb.conf&#9619;fR
file.
&#8962;RE
&#8962;PP
-V
&#8962;RS 4
Prints the program version number.
&#8962;RE
&#8962;PP
-s <configuration file>
&#8962;RS 4
The file specified contains the configuration details required by the server. The information in this file includes server-specific information such as what printcap file to use, as well as descriptions of all the services that the server is to provide. See
&#9619;fIsmb.conf&#9619;fR
for more information. The default configuration file name is determined at compile time.
&#8962;RE
&#8962;PP
-l|--log-basename=logdirectory
&#8962;RS 4
Base directory name for log/debug files. The extension
&#9619;fB".progname"&#9619;fR
will be appended (e.g. log.smbclient, log.smbd, etc...). The log file is never removed by the client.
&#8962;RE
&#8962;PP
-N
&#8962;RS 4
If specified, this parameter suppresses the normal password prompt from the client to the user. This is useful when accessing a service that does not require a password.
&#8962;sp
Unless a password is specified on the command line or this parameter is specified, the client will request a password.
&#8962;sp
If a password is specified on the command line and this option is also defined the password on the command line will be silently ingnored and no password will be used.
&#8962;RE
&#8962;PP
-k
&#8962;RS 4
Try to authenticate with kerberos. Only useful in an Active Directory environment.
&#8962;RE
&#8962;PP
-A|--authentication-file=filename
&#8962;RS 4
This option allows you to specify a file from which to read the username and password used in the connection. The format of the file is
&#8962;sp

&#8962;sp

.nf

username = <value>
password = <value>
domain   = <value>

.fi

&#8962;sp
Make certain that the permissions on the file restrict access from unwanted users.
&#8962;RE
&#8962;PP
-U|--user=username[%password]
&#8962;RS 4
Sets the SMB username or username and password.
&#8962;sp
If %password is not specified, the user will be prompted. The client will first check the
&#9619;fBUSER&#9619;fR
environment variable, then the
&#9619;fBLOGNAME&#9619;fR
variable and if either exists, the string is uppercased. If these environmental variables are not found, the username
&#9619;fBGUEST&#9619;fR
is used.
&#8962;sp
A third option is to use a credentials file which contains the plaintext of the username and password. This option is mainly provided for scripts where the admin does not wish to pass the credentials on the command line or via environment variables. If this method is used, make certain that the permissions on the file restrict access from unwanted users. See the
&#9619;fI-A&#9619;fR
for more details.
&#8962;sp
Be cautious about including passwords in scripts. Also, on many systems the command line of a running process may be seen via the
ps
command. To be safe always allow
rpcclient
to prompt for a password and type it in directly.
&#8962;RE
&#8962;PP
-n <primary NetBIOS name>
&#8962;RS 4
This option allows you to override the NetBIOS name that Samba uses for itself. This is identical to setting the

parameter in the
&#9619;fIsmb.conf&#9619;fR
file. However, a command line setting will take precedence over settings in
&#9619;fIsmb.conf&#9619;fR.
&#8962;RE
&#8962;PP
-i <scope>
&#8962;RS 4
This specifies a NetBIOS scope that
nmblookup
will use to communicate with when generating NetBIOS names. For details on the use of NetBIOS scopes, see rfc1001.txt and rfc1002.txt. NetBIOS scopes are
\fBvery\fR
rarely used, only set this parameter if you are the system administrator in charge of all the NetBIOS systems you communicate with.
&#8962;RE
&#8962;PP
-W|--workgroup=domain
&#8962;RS 4
Set the SMB domain of the username. This overrides the default domain which is the domain defined in smb.conf. If the domain specified is the same as the servers NetBIOS name, it causes the client to log on using the servers local SAM (as opposed to the Domain SAM).
&#8962;RE
&#8962;PP
-O socket options
&#8962;RS 4
TCP socket options to set on the client socket. See the socket options parameter in the
&#9619;fIsmb.conf&#9619;fR
manual page for the list of valid options.
&#8962;RE
&#8962;PP
-h|--help
&#8962;RS 4
Print a summary of command line options.
&#8962;RE
&#8962;SH "COMMANDS"
&#8962;SS "LSARPC"
&#8962;PP
lsaquery
&#8962;RS 4
Query info policy
&#8962;RE
&#8962;PP
lookupsids
&#8962;RS 4
Resolve a list of SIDs to usernames.
&#8962;RE
&#8962;PP
lookupnames
&#8962;RS 4
Resolve a list of usernames to SIDs.
&#8962;RE
&#8962;PP
enumtrusts
&#8962;RS 4
Enumerate trusted domains
&#8962;RE
&#8962;PP
enumprivs
&#8962;RS 4
Enumerate privileges
&#8962;RE
&#8962;PP
getdispname
&#8962;RS 4
Get the privilege name
&#8962;RE
&#8962;PP
lsaenumsid
&#8962;RS 4
Enumerate the LSA SIDS
&#8962;RE
&#8962;PP
lsaenumprivsaccount
&#8962;RS 4
Enumerate the privileges of an SID
&#8962;RE
&#8962;PP
lsaenumacctrights
&#8962;RS 4
Enumerate the rights of an SID
&#8962;RE
&#8962;PP
lsaenumacctwithright
&#8962;RS 4
Enumerate accounts with a right
&#8962;RE
&#8962;PP
lsaaddacctrights
&#8962;RS 4
Add rights to an account
&#8962;RE
&#8962;PP
lsaremoveacctrights
&#8962;RS 4
Remove rights from an account
&#8962;RE
&#8962;PP
lsalookupprivvalue
&#8962;RS 4
Get a privilege value given its name
&#8962;RE
&#8962;PP
lsaquerysecobj
&#8962;RS 4
Query LSA security object
&#8962;RE
&#8962;SS "LSARPC-DS"
&#8962;PP
dsroledominfo
&#8962;RS 4
Get Primary Domain Information
&#8962;RE
&#8962;PP

&#8962;PP
\fBDFS\fR
&#8962;PP
dfsexist
&#8962;RS 4
Query DFS support
&#8962;RE
&#8962;PP
dfsadd
&#8962;RS 4
Add a DFS share
&#8962;RE
&#8962;PP
dfsremove
&#8962;RS 4
Remove a DFS share
&#8962;RE
&#8962;PP
dfsgetinfo
&#8962;RS 4
Query DFS share info
&#8962;RE
&#8962;PP
dfsenum
&#8962;RS 4
Enumerate dfs shares
&#8962;RE
&#8962;SS "REG"
&#8962;PP
shutdown
&#8962;RS 4
Remote Shutdown
&#8962;RE
&#8962;PP
abortshutdown
&#8962;RS 4
Abort Shutdown
&#8962;RE
&#8962;SS "SRVSVC"
&#8962;PP
srvinfo
&#8962;RS 4
Server query info
&#8962;RE
&#8962;PP
netshareenum
&#8962;RS 4
Enumerate shares
&#8962;RE
&#8962;PP
netfileenum
&#8962;RS 4
Enumerate open files
&#8962;RE
&#8962;PP
netremotetod
&#8962;RS 4
Fetch remote time of day
&#8962;RE
&#8962;SS "SAMR"
&#8962;PP
queryuser
&#8962;RS 4
Query user info
&#8962;RE
&#8962;PP
querygroup
&#8962;RS 4
Query group info
&#8962;RE
&#8962;PP
queryusergroups
&#8962;RS 4
Query user groups
&#8962;RE
&#8962;PP
querygroupmem
&#8962;RS 4
Query group membership
&#8962;RE
&#8962;PP
queryaliasmem
&#8962;RS 4
Query alias membership
&#8962;RE
&#8962;PP
querydispinfo
&#8962;RS 4
Query display info
&#8962;RE
&#8962;PP
querydominfo
&#8962;RS 4
Query domain info
&#8962;RE
&#8962;PP
enumdomusers
&#8962;RS 4
Enumerate domain users
&#8962;RE
&#8962;PP
enumdomgroups
&#8962;RS 4
Enumerate domain groups
&#8962;RE
&#8962;PP
enumalsgroups
&#8962;RS 4
Enumerate alias groups
&#8962;RE
&#8962;PP
createdomuser
&#8962;RS 4
Create domain user
&#8962;RE
&#8962;PP
samlookupnames
&#8962;RS 4
Look up names
&#8962;RE
&#8962;PP
samlookuprids
&#8962;RS 4
Look up names
&#8962;RE
&#8962;PP
deletedomuser
&#8962;RS 4
Delete domain user
&#8962;RE
&#8962;PP
samquerysecobj
&#8962;RS 4
Query SAMR security object
&#8962;RE
&#8962;PP
getdompwinfo
&#8962;RS 4
Retrieve domain password info
&#8962;RE
&#8962;PP
lookupdomain
&#8962;RS 4
Look up domain
&#8962;RE
&#8962;SS "SPOOLSS"
&#8962;PP
adddriver <arch> <config> [<version>]
&#8962;RS 4
Execute an AddPrinterDriver() RPC to install the printer driver information on the server. Note that the driver files should already exist in the directory returned by
getdriverdir. Possible values for
&#9619;fIarch&#9619;fR
are the same as those for the
getdriverdir
command. The
&#9619;fIconfig&#9619;fR
parameter is defined as follows:
&#8962;sp

&#8962;sp

.nf

Long Printer Name:\
Driver File Name:\
Data File Name:\
Config File Name:\
Help File Name:\
Language Monitor Name:\
Default Data Type:\
Comma Separated list of Files

.fi

&#8962;sp
Any empty fields should be enter as the string "NULL".
&#8962;sp
Samba does not need to support the concept of Print Monitors since these only apply to local printers whose driver can make use of a bi-directional link for communication. This field should be "NULL". On a remote NT print server, the Print Monitor for a driver must already be installed prior to adding the driver or else the RPC will fail.
&#8962;sp
The
&#9619;fIversion&#9619;fR
parameter lets you specify the printer driver version number. If omitted, the default driver version for the specified architecture will be used. This option can be used to upload Windows 2000 (version 3) printer drivers.
&#8962;RE
&#8962;PP
addprinter <printername> <sharename> <drivername> <port>
&#8962;RS 4
Add a printer on the remote server. This printer will be automatically shared. Be aware that the printer driver must already be installed on the server (see
adddriver) and the
&#9619;fIport&#9619;fRmust be a valid port name (see
enumports.
&#8962;RE
&#8962;PP
deldriver
&#8962;RS 4
Delete the specified printer driver for all architectures. This does not delete the actual driver files from the server, only the entry from the server's list of drivers.
&#8962;RE
&#8962;PP
deldriverex <driver> [architecture] [version]
&#8962;RS 4
Delete the specified printer driver including driver files. You can limit this action to a specific architecture and a specific version. If no architecure is given, all driver files of that driver will be deleted.
&#8962;RE
&#8962;PP
enumdata
&#8962;RS 4
Enumerate all printer setting data stored on the server. On Windows NT clients, these values are stored in the registry, while Samba servers store them in the printers TDB. This command corresponds to the MS Platform SDK GetPrinterData() function (* This command is currently unimplemented).
&#8962;RE
&#8962;PP
enumdataex
&#8962;RS 4
Enumerate printer data for a key
&#8962;RE
&#8962;PP
enumjobs <printer>
&#8962;RS 4
List the jobs and status of a given printer. This command corresponds to the MS Platform SDK EnumJobs() function
&#8962;RE
&#8962;PP
enumkey
&#8962;RS 4
Enumerate printer keys
&#8962;RE
&#8962;PP
enumports [level]
&#8962;RS 4
Executes an EnumPorts() call using the specified info level. Currently only info levels 1 and 2 are supported.
&#8962;RE
&#8962;PP
enumdrivers [level]
&#8962;RS 4
Execute an EnumPrinterDrivers() call. This lists the various installed printer drivers for all architectures. Refer to the MS Platform SDK documentation for more details of the various flags and calling options. Currently supported info levels are 1, 2, and 3.
&#8962;RE
&#8962;PP
enumprinters [level]
&#8962;RS 4
Execute an EnumPrinters() call. This lists the various installed and share printers. Refer to the MS Platform SDK documentation for more details of the various flags and calling options. Currently supported info levels are 1, 2 and 5.
&#8962;RE
&#8962;PP
getdata <printername> <valuename;>
&#8962;RS 4
Retrieve the data for a given printer setting. See the
enumdata
command for more information. This command corresponds to the GetPrinterData() MS Platform SDK function.
&#8962;RE
&#8962;PP
getdataex
&#8962;RS 4
Get printer driver data with keyname
&#8962;RE
&#8962;PP
getdriver <printername>
&#8962;RS 4
Retrieve the printer driver information (such as driver file, config file, dependent files, etc...) for the given printer. This command corresponds to the GetPrinterDriver() MS Platform SDK function. Currently info level 1, 2, and 3 are supported.
&#8962;RE
&#8962;PP
getdriverdir <arch>
&#8962;RS 4
Execute a GetPrinterDriverDirectory() RPC to retrieve the SMB share name and subdirectory for storing printer driver files for a given architecture. Possible values for
&#9619;fIarch&#9619;fR
are "Windows 4.0" (for Windows 95/98), "Windows NT x86", "Windows NT PowerPC", "Windows Alpha_AXP", and "Windows NT R4000".
&#8962;RE
&#8962;PP
getprinter <printername>
&#8962;RS 4
Retrieve the current printer information. This command corresponds to the GetPrinter() MS Platform SDK function.
&#8962;RE
&#8962;PP
getprintprocdir
&#8962;RS 4
Get print processor directory
&#8962;RE
&#8962;PP
openprinter <printername>
&#8962;RS 4
Execute an OpenPrinterEx() and ClosePrinter() RPC against a given printer.
&#8962;RE
&#8962;PP
setdriver <printername> <drivername>
&#8962;RS 4
Execute a SetPrinter() command to update the printer driver associated with an installed printer. The printer driver must already be correctly installed on the print server.
&#8962;sp
See also the
enumprinters
and
enumdrivers
commands for obtaining a list of of installed printers and drivers.
&#8962;RE
&#8962;PP
addform
&#8962;RS 4
Add form
&#8962;RE
&#8962;PP
setform
&#8962;RS 4
Set form
&#8962;RE
&#8962;PP
getform
&#8962;RS 4
Get form
&#8962;RE
&#8962;PP
deleteform
&#8962;RS 4
Delete form
&#8962;RE
&#8962;PP
enumforms
&#8962;RS 4
Enumerate form
&#8962;RE
&#8962;PP
setprinter
&#8962;RS 4
Set printer comment
&#8962;RE
&#8962;PP
setprinterdata
&#8962;RS 4
Set REG_SZ printer data
&#8962;RE
&#8962;PP
setprintername <printername> <newprintername>
&#8962;RS 4
Set printer name
&#8962;RE
&#8962;PP
rffpcnex
&#8962;RS 4
Rffpcnex test
&#8962;RE
&#8962;SS "NETLOGON"
&#8962;PP
logonctrl2
&#8962;RS 4
Logon Control 2
&#8962;RE
&#8962;PP
logonctrl
&#8962;RS 4
Logon Control
&#8962;RE
&#8962;PP
samsync
&#8962;RS 4
Sam Synchronisation
&#8962;RE
&#8962;PP
samdeltas
&#8962;RS 4
Query Sam Deltas
&#8962;RE
&#8962;PP
samlogon
&#8962;RS 4
Sam Logon
&#8962;RE
&#8962;SS "GENERAL COMMANDS"
&#8962;PP
debuglevel
&#8962;RS 4
Set the current debug level used to log information.
&#8962;RE
&#8962;PP
help (?)
&#8962;RS 4
Print a listing of all known commands or extended help on a particular command.
&#8962;RE
&#8962;PP
quit (exit)
&#8962;RS 4
Exit
rpcclient.
&#8962;RE
&#8962;SH "BUGS"
&#8962;PP
rpcclient
is designed as a developer testing tool and may not be robust in certain areas (such as command line parsing). It has been known to generate a core dump upon failures when invalid parameters where passed to the interpreter.
&#8962;PP
From Luke Leighton's original rpcclient man page:
&#8962;PP
\fBWARNING!\fR
The MSRPC over SMB code has been developed from examining Network traces. No documentation is available from the original creators (Microsoft) on how MSRPC over SMB works, or how the individual MSRPC services work. Microsoft's implementation of these services has been demonstrated (and reported) to be... a bit flaky in places.
&#8962;PP
The development of Samba's implementation is also a bit rough, and as more of the services are understood, it can even result in versions of
&#9619;fBsmbd&#9619;fR(8)
and
&#9619;fBrpcclient&#9619;fR(1)
that are incompatible for some commands or services. Additionally, the developers are sending reports to Microsoft, and problems found or reported to Microsoft are fixed in Service Packs, which may result in incompatibilities.
&#8962;SH "VERSION"
&#8962;PP
This man page is correct for version 3.0 of the Samba suite.
&#8962;SH "AUTHOR"
&#8962;PP
The original Samba software and related utilities were created by Andrew Tridgell. Samba is now developed by the Samba Team as an Open Source project similar to the way the Linux kernel is developed.
&#8962;PP
The original rpcclient man page was written by Matthew Geddes, Luke Kenneth Casson Leighton, and rewritten by Gerald Carter. The conversion to DocBook for Samba 2.2 was done by Gerald Carter. The conversion to DocBook XML 4.2 for Samba 3.0 was done by Alexander Bokovoy.

